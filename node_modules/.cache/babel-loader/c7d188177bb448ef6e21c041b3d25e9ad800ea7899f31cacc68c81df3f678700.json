{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport { OpType } from '../types';\nimport { getIdentifierValue } from './utils';\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nvar ModelMerger = /** @class */function () {\n  function ModelMerger(outbox, ownSymbol) {\n    this.outbox = outbox;\n    this.ownSymbol = ownSymbol;\n  }\n  /**\n   *\n   * @param storage Storage adapter that contains the data.\n   * @param model The model from an outbox mutation.\n   * @returns The type of operation (INSERT/UPDATE/DELETE)\n   */\n  ModelMerger.prototype.merge = function (storage, model, modelDefinition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, mutationsForModel, isDelete;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.outbox.getForModel(storage, model, modelDefinition)];\n          case 1:\n            mutationsForModel = _c.sent();\n            isDelete = model._deleted;\n            if (!(mutationsForModel.length === 0)) return [3 /*break*/, 5];\n            if (!isDelete) return [3 /*break*/, 3];\n            result = OpType.DELETE;\n            return [4 /*yield*/, storage.delete(model, undefined, this.ownSymbol)];\n          case 2:\n            _c.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, storage.save(model, undefined, this.ownSymbol)];\n          case 4:\n            _a = __read.apply(void 0, [_c.sent(), 1]), _b = __read(_a[0], 2), result = _b[1];\n            _c.label = 5;\n          case 5:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  ModelMerger.prototype.mergePage = function (storage, modelConstructor, items, modelDefinition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var itemsMap, items_1, items_1_1, item, modelId, page;\n      var e_1, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            itemsMap = new Map();\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                modelId = getIdentifierValue(modelDefinition, item);\n                itemsMap.set(modelId, item);\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            page = __spread(itemsMap.values());\n            return [4 /*yield*/, storage.batchSave(modelConstructor, page, this.ownSymbol)];\n          case 1:\n            return [2 /*return*/, _b.sent()];\n        }\n      });\n    });\n  };\n  return ModelMerger;\n}();\nexport { ModelMerger };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAECA,MAAM,QAGA,UAAU;AAEjB,SAASC,kBAAkB,QAAQ,SAAS;AAE5C;AACA;EACC,qBACkBC,MAA2B,EAC3BC,SAAiB;IADjB,WAAM,GAAND,MAAM;IACN,cAAS,GAATC,SAAS;EACxB;EAEH;;;;;;EAMaC,2BAAK,GAAlB,UACCC,OAAgB,EAChBC,KAAQ,EACRC,eAA4B;;;;;;;YAGF,qBAAM,IAAI,CAACL,MAAM,CAACM,WAAW,CACtDH,OAAO,EACPC,KAAK,EACLC,eAAe,CACf;;YAJKE,iBAAiB,GAAGC,SAIzB;YAEKC,QAAQ,GAAGL,KAAK,CAACM,QAAQ;kBAE3BH,iBAAiB,CAACI,MAAM,KAAK,CAAC,GAA9B;iBACCF,QAAQ,EAAR;YACHG,MAAM,GAAGd,MAAM,CAACe,MAAM;YACtB,qBAAMV,OAAO,CAACW,MAAM,CAACV,KAAK,EAAEW,SAAS,EAAE,IAAI,CAACd,SAAS,CAAC;;YAAtDO,SAAsD;;;YAEvC,qBAAML,OAAO,CAACa,IAAI,CAACZ,KAAK,EAAEW,SAAS,EAAE,IAAI,CAACd,SAAS,CAAC;;YAAnEgB,yCAAmE,EAAlEC,qBAAU,EAAPN,cAAM;;;YAIZ,sBAAOA,MAAM;QAAC;;;GACd;EAEYV,+BAAS,GAAtB,UACCC,OAAgB,EAChBgB,gBAAiD,EACjDC,KAA8B,EAC9Bf,eAA4B;;;;;;;YAEtBgB,QAAQ,GAAuC,IAAIC,GAAG,EAAE;;cAE9D,KAAmBC,wBAAK,4EAAE;gBAAfC,IAAI;gBAERC,OAAO,GAAG1B,kBAAkB,CAACM,eAAe,EAAEmB,IAAI,CAAC;gBAEzDH,QAAQ,CAACK,GAAG,CAACD,OAAO,EAAED,IAAI,CAAC;;;;;;;;;;;;;YAGtBG,IAAI,YAAON,QAAQ,CAACO,MAAM,EAAE,CAAC;YAE5B,qBAAMzB,OAAO,CAAC0B,SAAS,CAACV,gBAAgB,EAAEQ,IAAI,EAAE,IAAI,CAAC1B,SAAS,CAAC;;YAAtE,sBAAOiB,SAA+D;QAAC;;;GACvE;EACF,kBAAC;AAAD,CAAC,EAzDD;AA2DA,SAAShB,WAAW","names":["OpType","getIdentifierValue","outbox","ownSymbol","ModelMerger","storage","model","modelDefinition","getForModel","mutationsForModel","_c","isDelete","_deleted","length","result","DELETE","delete","undefined","save","_a","_b","modelConstructor","items","itemsMap","Map","items_1","item","modelId","set","page","values","batchSave"],"sources":["C:\\Users\\weida\\Desktop\\playground_CC\\node_modules\\@aws-amplify\\datastore\\src\\sync\\merger.ts"],"sourcesContent":["import { Storage } from '../storage/storage';\nimport {\n\tModelInstanceMetadata,\n\tOpType,\n\tPersistentModelConstructor,\n\tSchemaModel,\n} from '../types';\nimport { MutationEventOutbox } from './outbox';\nimport { getIdentifierValue } from './utils';\n\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nclass ModelMerger {\n\tconstructor(\n\t\tprivate readonly outbox: MutationEventOutbox,\n\t\tprivate readonly ownSymbol: Symbol\n\t) {}\n\n\t/**\n\t *\n\t * @param storage Storage adapter that contains the data.\n\t * @param model The model from an outbox mutation.\n\t * @returns The type of operation (INSERT/UPDATE/DELETE)\n\t */\n\tpublic async merge<T extends ModelInstanceMetadata>(\n\t\tstorage: Storage,\n\t\tmodel: T,\n\t\tmodelDefinition: SchemaModel\n\t): Promise<OpType> {\n\t\tlet result: OpType;\n\t\tconst mutationsForModel = await this.outbox.getForModel(\n\t\t\tstorage,\n\t\t\tmodel,\n\t\t\tmodelDefinition\n\t\t);\n\n\t\tconst isDelete = model._deleted;\n\n\t\tif (mutationsForModel.length === 0) {\n\t\t\tif (isDelete) {\n\t\t\t\tresult = OpType.DELETE;\n\t\t\t\tawait storage.delete(model, undefined, this.ownSymbol);\n\t\t\t} else {\n\t\t\t\t[[, result]] = await storage.save(model, undefined, this.ownSymbol);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async mergePage(\n\t\tstorage: Storage,\n\t\tmodelConstructor: PersistentModelConstructor<any>,\n\t\titems: ModelInstanceMetadata[],\n\t\tmodelDefinition: SchemaModel\n\t): Promise<[ModelInstanceMetadata, OpType][]> {\n\t\tconst itemsMap: Map<string, ModelInstanceMetadata> = new Map();\n\n\t\tfor (const item of items) {\n\t\t\t// merge items by model id. Latest record for a given id remains.\n\t\t\tconst modelId = getIdentifierValue(modelDefinition, item);\n\n\t\t\titemsMap.set(modelId, item);\n\t\t}\n\n\t\tconst page = [...itemsMap.values()];\n\n\t\treturn await storage.batchSave(modelConstructor, page, this.ownSymbol);\n\t}\n}\n\nexport { ModelMerger };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}