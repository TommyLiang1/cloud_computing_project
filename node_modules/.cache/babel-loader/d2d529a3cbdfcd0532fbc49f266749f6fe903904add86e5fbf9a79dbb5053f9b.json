{"ast":null,"code":"import * as e from \"react\";\nlet t = 0;\nexport function FocusGuards(e) {\n  return useFocusGuards(), e.children;\n}\nexport function useFocusGuards() {\n  e.useEffect(() => {\n    var e, n;\n    const r = document.querySelectorAll(\"[data-radix-focus-guard]\");\n    return document.body.insertAdjacentElement(\"afterbegin\", null !== (e = r[0]) && void 0 !== e ? e : o()), document.body.insertAdjacentElement(\"beforeend\", null !== (n = r[1]) && void 0 !== n ? n : o()), t++, () => {\n      1 === t && document.querySelectorAll(\"[data-radix-focus-guard]\").forEach(e => e.remove()), t--;\n    };\n  }, []);\n}\nfunction o() {\n  const e = document.createElement(\"span\");\n  return e.setAttribute(\"data-radix-focus-guard\", \"\"), e.tabIndex = 0, e.style.cssText = \"outline: none; opacity: 0; position: fixed; pointer-events: none\", e;\n}\nexport const Root = FocusGuards;","map":{"version":3,"mappings":";AAGA,IAAIA,IAAQ;AAAA,OAEZ,SAASC,YAAYC;EAEnB,OADAC,kBACOD,EAAME;AAAAA;AAAAA,OAOf,SAASD;EACPE,EAAMC,UAAU;IAAM;IACpB,MAAMC,IAAaC,SAASC,iBAAiB;IAK7C,OAJAD,SAASE,KAAKC,sBAAsB,cAApC,cAAkDJ,EAAW,YAA7D,cAAmEK,MACnEJ,SAASE,KAAKC,sBAAsB,aAApC,cAAiDJ,EAAW,YAA5D,cAAkEK,MAClEZ,KAEO;MACS,MAAVA,KACFQ,SAASC,iBAAiB,4BAA4BI,QAASC,KAASA,EAAKC,WAE/Ef;IAAAA;EAAAA,GAED;AAAA;AAGL,SAASY;EACP,MAAMI,IAAUR,SAASS,cAAc;EAIvC,OAHAD,EAAQE,aAAa,0BAA0B,KAC/CF,EAAQG,WAAW,GACnBH,EAAQI,MAAMC,UAAU,oEACjBL;AAAAA;AAAAA,OAGT,MAAMM,OAAOrB","names":["count","FocusGuards","props","useFocusGuards","children","React","useEffect","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"sources":["C:\\Users\\weida\\Desktop\\playground_CC\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-dropdown-menu\\node_modules\\@radix-ui\\react-menu\\node_modules\\@radix-ui\\react-focus-guards\\dist\\packages\\react\\focus-guards\\src\\FocusGuards.tsx"],"sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}